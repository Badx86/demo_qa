{"uid":"62e6f665b05743ff","name":"Check Links","fullName":"tests.test_elements.TestBrokenLinksImages#test_links","historyId":"55a90c9c0c363167eac8386de758710f","time":{"start":1693000014004,"stop":1693000019395,"duration":5391},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55a98a569e23 <unknown>\n#1 0x55a98a2927a7 <unknown>\n#2 0x55a98a29fa2b <unknown>\n#3 0x55a98a297274 <unknown>\n#4 0x55a98a295e83 <unknown>\n#5 0x55a98a298580 <unknown>\n#6 0x55a98a29863c <unknown>\n#7 0x55a98a2d28a2 <unknown>\n#8 0x55a98a2c74f1 <unknown>\n#9 0x55a98a2f2012 <unknown>\n#10 0x55a98a2c6fb6 <unknown>\n#11 0x55a98a2f21de <unknown>\n#12 0x55a98a30a369 <unknown>\n#13 0x55a98a2f1de3 <unknown>\n#14 0x55a98a2c5a7b <unknown>\n#15 0x55a98a2c681e <unknown>\n#16 0x55a98a52b638 <unknown>\n#17 0x55a98a52f507 <unknown>\n#18 0x55a98a539c4c <unknown>\n#19 0x55a98a530136 <unknown>\n#20 0x55a98a4fe9cf <unknown>\n#21 0x55a98a553b98 <unknown>\n#22 0x55a98a553d68 <unknown>\n#23 0x55a98a562cb3 <unknown>\n#24 0x7fb4c78e1b43 <unknown>","statusTrace":"self = <test_elements.TestElements.TestBrokenLinksImages object at 0x7f44f6b0ed90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12f479a6a9b635d45c55a2692e110a5c\")>\n\n    @allure.title(\"Check Links\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_links(self, driver):\n        page = BrokenLinksImagesPage(driver, BROKEN_LINKS_URL)\n        page.open()\n>       invalid_link_page_text = page.check_links()\n\ntests/test_elements.py:178: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/elements_page.py:272: in check_links\n    broken_link.click()\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f44f699cf40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#22 0x55a98a553d68 \\\\u003Cunknown>\\\\n#23 0x55a98a562cb3 \\\\u003Cunknown>\\\\n#24 0x7fb4c78e1b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55a98a569e23 <unknown>\nE       #1 0x55a98a2927a7 <unknown>\nE       #2 0x55a98a29fa2b <unknown>\nE       #3 0x55a98a297274 <unknown>\nE       #4 0x55a98a295e83 <unknown>\nE       #5 0x55a98a298580 <unknown>\nE       #6 0x55a98a29863c <unknown>\nE       #7 0x55a98a2d28a2 <unknown>\nE       #8 0x55a98a2c74f1 <unknown>\nE       #9 0x55a98a2f2012 <unknown>\nE       #10 0x55a98a2c6fb6 <unknown>\nE       #11 0x55a98a2f21de <unknown>\nE       #12 0x55a98a30a369 <unknown>\nE       #13 0x55a98a2f1de3 <unknown>\nE       #14 0x55a98a2c5a7b <unknown>\nE       #15 0x55a98a2c681e <unknown>\nE       #16 0x55a98a52b638 <unknown>\nE       #17 0x55a98a52f507 <unknown>\nE       #18 0x55a98a539c4c <unknown>\nE       #19 0x55a98a530136 <unknown>\nE       #20 0x55a98a4fe9cf <unknown>\nE       #21 0x55a98a553b98 <unknown>\nE       #22 0x55a98a553d68 <unknown>\nE       #23 0x55a98a562cb3 <unknown>\nE       #24 0x7fb4c78e1b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692999899320,"stop":1692999899403,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1693000012794,"stop":1693000014003,"duration":1209},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55a98a569e23 <unknown>\n#1 0x55a98a2927a7 <unknown>\n#2 0x55a98a29fa2b <unknown>\n#3 0x55a98a297274 <unknown>\n#4 0x55a98a295e83 <unknown>\n#5 0x55a98a298580 <unknown>\n#6 0x55a98a29863c <unknown>\n#7 0x55a98a2d28a2 <unknown>\n#8 0x55a98a2c74f1 <unknown>\n#9 0x55a98a2f2012 <unknown>\n#10 0x55a98a2c6fb6 <unknown>\n#11 0x55a98a2f21de <unknown>\n#12 0x55a98a30a369 <unknown>\n#13 0x55a98a2f1de3 <unknown>\n#14 0x55a98a2c5a7b <unknown>\n#15 0x55a98a2c681e <unknown>\n#16 0x55a98a52b638 <unknown>\n#17 0x55a98a52f507 <unknown>\n#18 0x55a98a539c4c <unknown>\n#19 0x55a98a530136 <unknown>\n#20 0x55a98a4fe9cf <unknown>\n#21 0x55a98a553b98 <unknown>\n#22 0x55a98a553d68 <unknown>\n#23 0x55a98a562cb3 <unknown>\n#24 0x7fb4c78e1b43 <unknown>","statusTrace":"self = <test_elements.TestElements.TestBrokenLinksImages object at 0x7f44f6b0ed90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"12f479a6a9b635d45c55a2692e110a5c\")>\n\n    @allure.title(\"Check Links\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_links(self, driver):\n        page = BrokenLinksImagesPage(driver, BROKEN_LINKS_URL)\n        page.open()\n>       invalid_link_page_text = page.check_links()\n\ntests/test_elements.py:178: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/elements_page.py:272: in check_links\n    broken_link.click()\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f44f699cf40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#22 0x55a98a553d68 \\\\u003Cunknown>\\\\n#23 0x55a98a562cb3 \\\\u003Cunknown>\\\\n#24 0x7fb4c78e1b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55a98a569e23 <unknown>\nE       #1 0x55a98a2927a7 <unknown>\nE       #2 0x55a98a29fa2b <unknown>\nE       #3 0x55a98a297274 <unknown>\nE       #4 0x55a98a295e83 <unknown>\nE       #5 0x55a98a298580 <unknown>\nE       #6 0x55a98a29863c <unknown>\nE       #7 0x55a98a2d28a2 <unknown>\nE       #8 0x55a98a2c74f1 <unknown>\nE       #9 0x55a98a2f2012 <unknown>\nE       #10 0x55a98a2c6fb6 <unknown>\nE       #11 0x55a98a2f21de <unknown>\nE       #12 0x55a98a30a369 <unknown>\nE       #13 0x55a98a2f1de3 <unknown>\nE       #14 0x55a98a2c5a7b <unknown>\nE       #15 0x55a98a2c681e <unknown>\nE       #16 0x55a98a52b638 <unknown>\nE       #17 0x55a98a52f507 <unknown>\nE       #18 0x55a98a539c4c <unknown>\nE       #19 0x55a98a530136 <unknown>\nE       #20 0x55a98a4fe9cf <unknown>\nE       #21 0x55a98a553b98 <unknown>\nE       #22 0x55a98a553d68 <unknown>\nE       #23 0x55a98a562cb3 <unknown>\nE       #24 0x7fb4c78e1b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Open a browser","time":{"start":1693000014005,"stop":1693000017270,"duration":3265},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1693000019493,"stop":1693000019556,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"epic","value":"Test Elements"},{"name":"feature","value":"Test Broken Links-Images"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_elements"},{"name":"subSuite","value":"TestElements"},{"name":"host","value":"fv-az254-698"},{"name":"thread","value":"2986-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_elements"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"bc966beb153e8d2e","reportUrl":"https://Badx86.github.io/demo_qa/28//#testresult/bc966beb153e8d2e","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55ff35704e23 <unknown>\n#1 0x55ff3542d7a7 <unknown>\n#2 0x55ff3543aa2b <unknown>\n#3 0x55ff35432274 <unknown>\n#4 0x55ff35430e83 <unknown>\n#5 0x55ff35433580 <unknown>\n#6 0x55ff3543363c <unknown>\n#7 0x55ff3546d8a2 <unknown>\n#8 0x55ff354624f1 <unknown>\n#9 0x55ff3548d012 <unknown>\n#10 0x55ff35461fb6 <unknown>\n#11 0x55ff3548d1de <unknown>\n#12 0x55ff354a5369 <unknown>\n#13 0x55ff3548cde3 <unknown>\n#14 0x55ff35460a7b <unknown>\n#15 0x55ff3546181e <unknown>\n#16 0x55ff356c6638 <unknown>\n#17 0x55ff356ca507 <unknown>\n#18 0x55ff356d4c4c <unknown>\n#19 0x55ff356cb136 <unknown>\n#20 0x55ff356999cf <unknown>\n#21 0x55ff356eeb98 <unknown>\n#22 0x55ff356eed68 <unknown>\n#23 0x55ff356fdcb3 <unknown>\n#24 0x7fd97a7e8b43 <unknown>","time":{"start":1692999888707,"stop":1692999892965,"duration":4258}},{"uid":"ac103692ce1bebdf","reportUrl":"https://Badx86.github.io/demo_qa/27//#testresult/ac103692ce1bebdf","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5591b5d2ce23 <unknown>\n#1 0x5591b5a557a7 <unknown>\n#2 0x5591b5a62a2b <unknown>\n#3 0x5591b5a5a274 <unknown>\n#4 0x5591b5a58e83 <unknown>\n#5 0x5591b5a5b580 <unknown>\n#6 0x5591b5a5b63c <unknown>\n#7 0x5591b5a958a2 <unknown>\n#8 0x5591b5a8a4f1 <unknown>\n#9 0x5591b5ab5012 <unknown>\n#10 0x5591b5a89fb6 <unknown>\n#11 0x5591b5ab51de <unknown>\n#12 0x5591b5acd369 <unknown>\n#13 0x5591b5ab4de3 <unknown>\n#14 0x5591b5a88a7b <unknown>\n#15 0x5591b5a8981e <unknown>\n#16 0x5591b5cee638 <unknown>\n#17 0x5591b5cf2507 <unknown>\n#18 0x5591b5cfcc4c <unknown>\n#19 0x5591b5cf3136 <unknown>\n#20 0x5591b5cc19cf <unknown>\n#21 0x5591b5d16b98 <unknown>\n#22 0x5591b5d16d68 <unknown>\n#23 0x5591b5d25cb3 <unknown>\n#24 0x7efd793cab43 <unknown>","time":{"start":1692999837212,"stop":1692999840615,"duration":3403}},{"uid":"11be92c043837fb8","reportUrl":"https://Badx86.github.io/demo_qa/26//#testresult/11be92c043837fb8","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5558ef1f1e23 <unknown>\n#1 0x5558eef1a7a7 <unknown>\n#2 0x5558eef27a2b <unknown>\n#3 0x5558eef1f274 <unknown>\n#4 0x5558eef1de83 <unknown>\n#5 0x5558eef20580 <unknown>\n#6 0x5558eef2063c <unknown>\n#7 0x5558eef5a8a2 <unknown>\n#8 0x5558eef4f4f1 <unknown>\n#9 0x5558eef7a012 <unknown>\n#10 0x5558eef4efb6 <unknown>\n#11 0x5558eef7a1de <unknown>\n#12 0x5558eef92369 <unknown>\n#13 0x5558eef79de3 <unknown>\n#14 0x5558eef4da7b <unknown>\n#15 0x5558eef4e81e <unknown>\n#16 0x5558ef1b3638 <unknown>\n#17 0x5558ef1b7507 <unknown>\n#18 0x5558ef1c1c4c <unknown>\n#19 0x5558ef1b8136 <unknown>\n#20 0x5558ef1869cf <unknown>\n#21 0x5558ef1dbb98 <unknown>\n#22 0x5558ef1dbd68 <unknown>\n#23 0x5558ef1eacb3 <unknown>\n#24 0x7f8fca7a1b43 <unknown>","time":{"start":1692882924637,"stop":1692882927790,"duration":3153}}]},"tags":[]},"source":"62e6f665b05743ff.json","parameterValues":[]}