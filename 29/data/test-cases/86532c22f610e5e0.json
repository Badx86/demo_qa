{"uid":"86532c22f610e5e0","name":"Upload File","fullName":"tests.test_elements.TestUploadDownload#test_upload_file","historyId":"f45e4e1a5ee22ca4cdf178f886a1d814","time":{"start":1693000020773,"stop":1693000023446,"duration":2673},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: path is not absolute: C:\\Users\\мвидео\\PycharmProjects\\DemoQA\\filetest752.txt\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x5583b47b6e23 <unknown>\n#1 0x5583b44df7a7 <unknown>\n#2 0x5583b44eabe8 <unknown>\n#3 0x5583b45181fd <unknown>\n#4 0x5583b453f012 <unknown>\n#5 0x5583b4513fb6 <unknown>\n#6 0x5583b453f1de <unknown>\n#7 0x5583b4557369 <unknown>\n#8 0x5583b453ede3 <unknown>\n#9 0x5583b4512a7b <unknown>\n#10 0x5583b451381e <unknown>\n#11 0x5583b4778638 <unknown>\n#12 0x5583b477c507 <unknown>\n#13 0x5583b4786c4c <unknown>\n#14 0x5583b477d136 <unknown>\n#15 0x5583b474b9cf <unknown>\n#16 0x5583b47a0b98 <unknown>\n#17 0x5583b47a0d68 <unknown>\n#18 0x5583b47afcb3 <unknown>\n#19 0x7f988bf02b43 <unknown>","statusTrace":"self = <test_elements.TestElements.TestUploadDownload object at 0x7f44f6af3370>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"509dcb2172c51459b150fe9607f34f6c\")>\n\n    @allure.title(\"Upload File\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_upload_file(self, driver):\n        page = UploadDownloadPage(driver, UPLOAD_AND_DOWNLOAD_URL)\n        page.open()\n>       file_name, result = page.upload_file()\n\ntests/test_elements.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/elements_page.py:283: in upload_file\n    self.element_is_present(self.locators.UPLOAD_BUTTON).send_keys(path)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f44f6718f10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: path is not absolute: C:\\\\\\\\User...\\\\n#17 0x5583b47a0d68 \\\\u003Cunknown>\\\\n#18 0x5583b47afcb3 \\\\u003Cunknown>\\\\n#19 0x7f988bf02b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: path is not absolute: C:\\Users\\мвидео\\PycharmProjects\\DemoQA\\filetest752.txt\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x5583b47b6e23 <unknown>\nE       #1 0x5583b44df7a7 <unknown>\nE       #2 0x5583b44eabe8 <unknown>\nE       #3 0x5583b45181fd <unknown>\nE       #4 0x5583b453f012 <unknown>\nE       #5 0x5583b4513fb6 <unknown>\nE       #6 0x5583b453f1de <unknown>\nE       #7 0x5583b4557369 <unknown>\nE       #8 0x5583b453ede3 <unknown>\nE       #9 0x5583b4512a7b <unknown>\nE       #10 0x5583b451381e <unknown>\nE       #11 0x5583b4778638 <unknown>\nE       #12 0x5583b477c507 <unknown>\nE       #13 0x5583b4786c4c <unknown>\nE       #14 0x5583b477d136 <unknown>\nE       #15 0x5583b474b9cf <unknown>\nE       #16 0x5583b47a0b98 <unknown>\nE       #17 0x5583b47a0d68 <unknown>\nE       #18 0x5583b47afcb3 <unknown>\nE       #19 0x7f988bf02b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692999899320,"stop":1692999899403,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1693000019559,"stop":1693000020771,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: path is not absolute: C:\\Users\\мвидео\\PycharmProjects\\DemoQA\\filetest752.txt\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x5583b47b6e23 <unknown>\n#1 0x5583b44df7a7 <unknown>\n#2 0x5583b44eabe8 <unknown>\n#3 0x5583b45181fd <unknown>\n#4 0x5583b453f012 <unknown>\n#5 0x5583b4513fb6 <unknown>\n#6 0x5583b453f1de <unknown>\n#7 0x5583b4557369 <unknown>\n#8 0x5583b453ede3 <unknown>\n#9 0x5583b4512a7b <unknown>\n#10 0x5583b451381e <unknown>\n#11 0x5583b4778638 <unknown>\n#12 0x5583b477c507 <unknown>\n#13 0x5583b4786c4c <unknown>\n#14 0x5583b477d136 <unknown>\n#15 0x5583b474b9cf <unknown>\n#16 0x5583b47a0b98 <unknown>\n#17 0x5583b47a0d68 <unknown>\n#18 0x5583b47afcb3 <unknown>\n#19 0x7f988bf02b43 <unknown>","statusTrace":"self = <test_elements.TestElements.TestUploadDownload object at 0x7f44f6af3370>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"509dcb2172c51459b150fe9607f34f6c\")>\n\n    @allure.title(\"Upload File\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_upload_file(self, driver):\n        page = UploadDownloadPage(driver, UPLOAD_AND_DOWNLOAD_URL)\n        page.open()\n>       file_name, result = page.upload_file()\n\ntests/test_elements.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/elements_page.py:283: in upload_file\n    self.element_is_present(self.locators.UPLOAD_BUTTON).send_keys(path)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f44f6718f10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: path is not absolute: C:\\\\\\\\User...\\\\n#17 0x5583b47a0d68 \\\\u003Cunknown>\\\\n#18 0x5583b47afcb3 \\\\u003Cunknown>\\\\n#19 0x7f988bf02b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: path is not absolute: C:\\Users\\мвидео\\PycharmProjects\\DemoQA\\filetest752.txt\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x5583b47b6e23 <unknown>\nE       #1 0x5583b44df7a7 <unknown>\nE       #2 0x5583b44eabe8 <unknown>\nE       #3 0x5583b45181fd <unknown>\nE       #4 0x5583b453f012 <unknown>\nE       #5 0x5583b4513fb6 <unknown>\nE       #6 0x5583b453f1de <unknown>\nE       #7 0x5583b4557369 <unknown>\nE       #8 0x5583b453ede3 <unknown>\nE       #9 0x5583b4512a7b <unknown>\nE       #10 0x5583b451381e <unknown>\nE       #11 0x5583b4778638 <unknown>\nE       #12 0x5583b477c507 <unknown>\nE       #13 0x5583b4786c4c <unknown>\nE       #14 0x5583b477d136 <unknown>\nE       #15 0x5583b474b9cf <unknown>\nE       #16 0x5583b47a0b98 <unknown>\nE       #17 0x5583b47a0d68 <unknown>\nE       #18 0x5583b47afcb3 <unknown>\nE       #19 0x7f988bf02b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Open a browser","time":{"start":1693000020773,"stop":1693000023397,"duration":2624},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Find a present element","time":{"start":1693000023398,"stop":1693000023412,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#uploadFile')"},{"name":"timeout","value":"5"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1693000023533,"stop":1693000023593,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"epic","value":"Test Elements"},{"name":"feature","value":"Test File Upload & Download"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_elements"},{"name":"subSuite","value":"TestElements"},{"name":"host","value":"fv-az254-698"},{"name":"thread","value":"2986-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_elements"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"da0c5b5a49001a3d","reportUrl":"https://Badx86.github.io/demo_qa/28//#testresult/da0c5b5a49001a3d","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: path is not absolute: C:\\Users\\мвидео\\PycharmProjects\\DemoQA\\filetest808.txt\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55fd2dedfe23 <unknown>\n#1 0x55fd2dc087a7 <unknown>\n#2 0x55fd2dc13be8 <unknown>\n#3 0x55fd2dc411fd <unknown>\n#4 0x55fd2dc68012 <unknown>\n#5 0x55fd2dc3cfb6 <unknown>\n#6 0x55fd2dc681de <unknown>\n#7 0x55fd2dc80369 <unknown>\n#8 0x55fd2dc67de3 <unknown>\n#9 0x55fd2dc3ba7b <unknown>\n#10 0x55fd2dc3c81e <unknown>\n#11 0x55fd2dea1638 <unknown>\n#12 0x55fd2dea5507 <unknown>\n#13 0x55fd2deafc4c <unknown>\n#14 0x55fd2dea6136 <unknown>\n#15 0x55fd2de749cf <unknown>\n#16 0x55fd2dec9b98 <unknown>\n#17 0x55fd2dec9d68 <unknown>\n#18 0x55fd2ded8cb3 <unknown>\n#19 0x7f17f953fb43 <unknown>","time":{"start":1692999894520,"stop":1692999896505,"duration":1985}}]},"tags":[]},"source":"86532c22f610e5e0.json","parameterValues":[]}